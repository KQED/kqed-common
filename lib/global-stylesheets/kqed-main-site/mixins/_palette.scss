$palettes: (
  ousd: (
    highlight: $color-ousd-green,
    base: $color-ousd-green,
    tint: $color-ousd-green
  ),
  truthbetold: (
    highlight: #f04e23,
    base: #6b0300,
    tint: #580200
  ),
  kqedLive: (
    highlight: #062942,
    base: #6900a4,
    tint: #52008e
  ),
  checkplease: (
    highlight: $color-hot-red,
    base: #f7f4f1,
    tint: #52008e
  )
);

$default-palette: (
  highlight: $color-hot-red,
  base: #6900a4,
  tint: #52008e
);

@function get-color($map, $field) {
  @if ($field == gradient) {
    @return linear-gradient(to bottom right, map-get($map, base), map-get($map, tint));
  }

  @else {
    @return map-get($map, $field);
  }
}

@mixin palette ($list) {
  // not sure if strictly necessary
  // might allow us to us an @if in the other loop
  // not have to write defaults in every palette
  $n: 1;

  @while ($n < length($list)) {
    #{nth($list, $n)}: get-color($default-palette, nth($list, $n + 1));
    $n: $n + 1;
  }

  @each $name, $map in $palettes {
    :global(.palette-#{$name}) & {
      $i: 1;

      @while ($i < length($list)) {
        #{nth($list, $i)}: get-color($map, nth($list, $i + 1));
        $i: $i + 1;
      }
    }
  }
}
